#Configures newly installed DD agent.
---
- name: Check if required params are provided to playbook
  fail: msg="env_name, env_type (prod/qa/dev), env_name (monsoon,aws,bare-metal), cluster_name (qa2/sc1/us1 etc),role (app,ncv,aj), cluster_status (live/standby)"
  when: env_type is undefined or env_name is undefined or cluster_name is undefined or role is undefined or cluster_status is undefined

- name: Default api_key to 95b83e2131833f26084fde4a9640055c, prod key, if none specified
  set_fact: api_key=95b83e2131833f26084fde4a9640055c
  when: api_key is undefined

- name: Check if /etc/dd-agent/datadog.conf exists
  stat: path=/etc/dd-agent/datadog.conf
  register: stat_result

- name: Install /etc/dd-agent/datadog.conf if that doesn't exist yet.
  shell: cp /etc/dd-agent/datadog.conf.example /etc/dd-agent/datadog.conf
  when: stat_result.stat.exists == False 

- name: Run hostname command to get the host name
  shell: hostname --long 
  register: out

- set_fact: host_name="{{ out.stdout }}"

- name: Build tags string
  set_fact: tags_str="role{{ ':' }}datadog,env{{ ':' }}{{ env_name }},instance-name{{ ':' }}{{ host_name }},role{{ ':' }}docker,cluster{{ ':' }}{{ cluster_name }},role{{ ':' }}{{ role }}"

- name: Add tags to datadog.conf
  lineinfile: path=/etc/dd-agent/datadog.conf regexp="^tags:" line="tags{{ ':' }} {{ tags_str }}"

- name: Make sure user dd-agent is in docker group for the Docker integration to work
  user: name=dd-agent groups=docker

- name: Check the version of Datadog agent 
  shell: /etc/init.d/datadog-agent info |grep Collector
  register: out
- debug: msg="Datadog agent version={{ out.stdout }}"

- name: Enable auto-discovery option from datadog.conf on app nodes
  lineinfile: path=/etc/dd-agent/datadog.conf line="service_discovery_backend{{ ':' }} docker"
  when: role == 'app'

- name: Enable JMX integration 
  lineinfile: path=/etc/dd-agent/datadog.conf regexp="^sd_jmx_enable" line="sd_jmx_enable{{ ':' }} yes"

- name: Update dd_api_key in production env
  lineinfile: path=/etc/dd-agent/datadog.conf regexp="^api_key:" line="api_key{{ ':' }} {{ api_key }}"

- name: Check Datadog agent api_key
  shell: grep ^api_key /etc/dd-agent/datadog.conf 
  register: out

- name: Install /etc/dd-agent/conf.d/docker_daemon.yaml on app nodes
  template: src=docker_daemon.yaml.j2 dest=/etc/dd-agent/conf.d/docker_daemon.yaml owner=dd-agent group=dd-agent
  when: role == 'app'

- name: Install latest /etc/dd-agent/conf.d/process.yaml
  template: src="process.{{ role }}.yaml.j2" dest=/etc/dd-agent/conf.d/process.yaml owner=dd-agent group=dd-agent

